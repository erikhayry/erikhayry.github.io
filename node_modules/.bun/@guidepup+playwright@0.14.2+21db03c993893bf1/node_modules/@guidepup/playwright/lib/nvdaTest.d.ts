import type { CommandOptions, NVDA } from "@guidepup/guidepup";
type Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type CaptureCommandOptions = Prettify<Pick<CommandOptions, "capture">>;
/**
 * [API Reference](https://www.guidepup.dev/docs/api/class-nvda)
 *
 * This object can be used to launch and control NVDA.
 *
 * Here's a typical example:
 *
 * ```ts
 * import { nvda } from "@guidepup/guidepup";
 *
 * (async () => {
 *   // Start NVDA.
 *   await nvda.start();
 *
 *   // Move to the next item.
 *   await nvda.next();
 *
 *   // Stop NVDA.
 *   await nvda.stop();
 * })();
 * ```
 */
export interface NVDAPlaywright extends NVDA {
    /**
     * Guidepup Playwright specific command that navigates NVDA to the beginning
     * of the browser's web content.
     *
     * This command should be used after page navigation.
     *
     * Note: this command clears all logs.
     */
    navigateToWebContent(): Promise<void>;
}
/**
 * These tests extend the default Playwright environment that launches the
 * browser with a running instance of the NVDA screen reader for Windows.
 *
 * A fresh started NVDA instance `nvda` is provided to each test.
 */
export declare const nvdaTest: import("@playwright/test").TestType<import("@playwright/test").PlaywrightTestArgs & import("@playwright/test").PlaywrightTestOptions & {
    /**
     * [API Reference](https://www.guidepup.dev/docs/api/class-nvda)
     *
     * This object can be used to launch and control NVDA.
     *
     * Here's a typical example:
     *
     * ```ts
     * import { nvda } from "@guidepup/guidepup";
     *
     * (async () => {
     *   // Start NVDA.
     *   await nvda.start();
     *
     *   // Move to the next item.
     *   await nvda.next();
     *
     *   // Stop NVDA.
     *   await nvda.stop();
     * })();
     * ```
     */
    nvda: NVDAPlaywright;
    /**
     * [API Reference](https://www.guidepup.dev/docs/api/class-command-options)
     *
     * Options to start NVDA with, see also [nvda.start([options])](https://www.guidepup.dev/docs/api/class-nvda#nvda-start).
     */
    nvdaStartOptions: CaptureCommandOptions;
}, import("@playwright/test").PlaywrightWorkerArgs & import("@playwright/test").PlaywrightWorkerOptions>;
export {};
